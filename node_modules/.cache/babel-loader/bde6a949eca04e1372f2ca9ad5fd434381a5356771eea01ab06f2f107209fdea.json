{"ast":null,"code":"var _jsxFileName = \"/Users/marleywetini/repos/COS30049_Assignment/src/components/PredictionGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionGraph = () => {\n  _s();\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n\n  // Fetch predictions data\n  const fetchPredictions = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/predictions/plot\", {\n        responseType: \"blob\"\n      });\n      setPredictions(response.data.predictions);\n    } catch (error) {\n      console.error(\"Error fetching predictions:\", error);\n    }\n  };\n\n  // Fetch the graph image URL\n  const fetchGraph = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:8000/predictions/plot\", {\n        responseType: \"blob\" // Important to receive image data\n      });\n      // Create a URL for the image blob\n      const imageUrl = URL.createObjectURL(response.data);\n      setGraphUrl(imageUrl);\n    } catch (error) {\n      console.error(\"Error fetching graph:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPredictions();\n    fetchGraph();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Prediction Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), graphUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: graphUrl,\n        alt: \"Prediction Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prediction List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: prediction\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionGraph, \"Gh5lQ2C4bMC1t+c95PdrgHDCGec=\");\n_c = PredictionGraph;\nexport default PredictionGraph;\nvar _c;\n$RefreshReg$(_c, \"PredictionGraph\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PredictionGraph","_s","graphUrl","setGraphUrl","predictions","setPredictions","fetchPredictions","response","get","responseType","data","error","console","fetchGraph","imageUrl","URL","createObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","prediction","index","_c","$RefreshReg$"],"sources":["/Users/marleywetini/repos/COS30049_Assignment/src/components/PredictionGraph.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst PredictionGraph = () => {\n  const [graphUrl, setGraphUrl] = useState(null);\n  const [predictions, setPredictions] = useState([]);\n\n  // Fetch predictions data\n  const fetchPredictions = async () => {\n    try {\n      const response = await axios.get(\n        \"http://127.0.0.1:8000/predictions/plot\",\n        {\n          responseType: \"blob\",\n        }\n      );\n      setPredictions(response.data.predictions);\n    } catch (error) {\n      console.error(\"Error fetching predictions:\", error);\n    }\n  };\n\n  // Fetch the graph image URL\n  const fetchGraph = async () => {\n    try {\n      const response = await axios.get(\n        \"http://127.0.0.1:8000/predictions/plot\",\n        {\n          responseType: \"blob\", // Important to receive image data\n        }\n      );\n      // Create a URL for the image blob\n      const imageUrl = URL.createObjectURL(response.data);\n      setGraphUrl(imageUrl);\n    } catch (error) {\n      console.error(\"Error fetching graph:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPredictions();\n    fetchGraph();\n  }, []);\n\n  return (\n    <div>\n      <h1>Prediction Graph</h1>\n      {graphUrl && (\n        <div>\n          <img src={graphUrl} alt=\"Prediction Graph\" />\n        </div>\n      )}\n      <h2>Prediction List</h2>\n      <ul>\n        {predictions.map((prediction, index) => (\n          <li key={index}>{prediction}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PredictionGraph;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,wCAAwC,EACxC;QACEC,YAAY,EAAE;MAChB,CACF,CAAC;MACDJ,cAAc,CAACE,QAAQ,CAACG,IAAI,CAACN,WAAW,CAAC;IAC3C,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,wCAAwC,EACxC;QACEC,YAAY,EAAE,MAAM,CAAE;MACxB,CACF,CAAC;MACD;MACA,MAAMK,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACT,QAAQ,CAACG,IAAI,CAAC;MACnDP,WAAW,CAACW,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAAC,CAAC;IAClBO,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBnB,QAAQ,iBACPH,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAKuB,GAAG,EAAEpB,QAAS;QAACqB,GAAG,EAAC;MAAkB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACN,eACDtB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtB,OAAA;MAAAkB,QAAA,EACGb,WAAW,CAACoB,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjC3B,OAAA;QAAAkB,QAAA,EAAiBQ;MAAU,GAAlBC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzDID,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AA2DrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}