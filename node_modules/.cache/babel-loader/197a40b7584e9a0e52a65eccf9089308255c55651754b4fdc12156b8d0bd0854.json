{"ast":null,"code":"var _jsxFileName = \"/Users/marleywetini/repos/COS30049_Assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./components/InputForm\";\nimport DataVisualization from \"./components/DataVisualization\";\nimport DynamicGraph from \"./components/DynamicGraph\";\nimport PredictionGraph from \"./components/PredictionGraph\"; // Import the PredictionGraph component\nimport { AppContainer, StyledPaper } from \"./styles/AppStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [aqiPrediction, setAqiPrediction] = useState(null);\n  const [aqiCategory, setAqiCategory] = useState(null);\n  const [inputData, setInputData] = useState({});\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState(null);\n  const handleFormSubmit = async inputData => {\n    setInputData(inputData);\n    setError(null);\n    console.log(\"Sending input data:\", inputData);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/predict\", inputData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setAqiPrediction(response.data[0]);\n      setAqiCategory(response.data[1]);\n      pred;\n    } catch (error) {\n      console.error(\"Error fetching prediction or classification:\", error);\n      setError(\"Failed to fetch data from backend. Please try again.\");\n      setAqiPrediction(null);\n      setAqiCategory(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"AQI Prediction and Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPaper, {\n      children: /*#__PURE__*/_jsxDEV(InputForm, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      gutterBottom: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), Object.keys(inputData).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [aqiPrediction !== null && aqiPrediction !== undefined && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Predicted AQI: \", aqiPrediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), aqiCategory && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Air Quality Category: \", aqiCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DataVisualization, {\n        aqiCategory: aqiCategory,\n        inputData: inputData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(PredictionGraph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), \" \", /*#__PURE__*/_jsxDEV(StyledPaper, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Prediction Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PredictionGraph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"21BbvsqMo5Vkb86Uh7Rhj+NGVr8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","InputForm","DataVisualization","DynamicGraph","PredictionGraph","AppContainer","StyledPaper","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","aqiPrediction","setAqiPrediction","aqiCategory","setAqiCategory","inputData","setInputData","predictions","setPredictions","error","setError","handleFormSubmit","console","log","response","post","headers","data","pred","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","color","Object","keys","length","undefined","_c","$RefreshReg$"],"sources":["/Users/marleywetini/repos/COS30049_Assignment/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./components/InputForm\";\nimport DataVisualization from \"./components/DataVisualization\";\nimport DynamicGraph from \"./components/DynamicGraph\";\nimport PredictionGraph from \"./components/PredictionGraph\"; // Import the PredictionGraph component\nimport { AppContainer, StyledPaper } from \"./styles/AppStyles\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction App() {\n  const [aqiPrediction, setAqiPrediction] = useState(null);\n  const [aqiCategory, setAqiCategory] = useState(null);\n  const [inputData, setInputData] = useState({});\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState(null);\n\n  const handleFormSubmit = async (inputData) => {\n    setInputData(inputData);\n    setError(null);\n    console.log(\"Sending input data:\", inputData);\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/predict\",\n        inputData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      setAqiPrediction(response.data[0]);\n      setAqiCategory(response.data[1]);\n      pred;\n    } catch (error) {\n      console.error(\"Error fetching prediction or classification:\", error);\n      setError(\"Failed to fetch data from backend. Please try again.\");\n      setAqiPrediction(null);\n      setAqiCategory(null);\n    }\n  };\n\n  return (\n    <AppContainer>\n      <Typography variant=\"h4\" gutterBottom>\n        AQI Prediction and Classification\n      </Typography>\n      <StyledPaper>\n        <InputForm onSubmit={handleFormSubmit} />\n      </StyledPaper>\n      {error && (\n        <Typography variant=\"body1\" color=\"error\" gutterBottom>\n          {error}\n        </Typography>\n      )}\n      {Object.keys(inputData).length > 0 && (\n        <>\n          {aqiPrediction !== null && aqiPrediction !== undefined && (\n            <Typography variant=\"h6\">Predicted AQI: {aqiPrediction}</Typography>\n          )}\n          {aqiCategory && (\n            <Typography variant=\"h6\">\n              Air Quality Category: {aqiCategory}\n            </Typography>\n          )}\n          <DataVisualization aqiCategory={aqiCategory} inputData={inputData} />\n        </>\n      )}\n      {<PredictionGraph />} {/* Render the PredictionGraph component */}\n      <StyledPaper>\n        <Typography variant=\"h5\" gutterBottom>\n          Prediction Graph\n        </Typography>\n        <PredictionGraph />\n      </StyledPaper>\n    </AppContainer>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,8BAA8B,CAAC,CAAC;AAC5D,SAASC,YAAY,EAAEC,WAAW,QAAQ,oBAAoB;AAC9D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMyB,gBAAgB,GAAG,MAAON,SAAS,IAAK;IAC5CC,YAAY,CAACD,SAAS,CAAC;IACvBK,QAAQ,CAAC,IAAI,CAAC;IACdE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,SAAS,CAAC;IAC7C,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAC/B,+BAA+B,EAC/BV,SAAS,EACT;QACEW,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CACF,CAAC;MACDd,gBAAgB,CAACY,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MAClCb,cAAc,CAACU,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MAChCC,IAAI;IACN,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpEC,QAAQ,CAAC,sDAAsD,CAAC;MAChER,gBAAgB,CAAC,IAAI,CAAC;MACtBE,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACER,OAAA,CAACJ,YAAY;IAAA2B,QAAA,gBACXvB,OAAA,CAACF,UAAU;MAAC0B,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb7B,OAAA,CAACH,WAAW;MAAA0B,QAAA,eACVvB,OAAA,CAACR,SAAS;QAACsC,QAAQ,EAAEf;MAAiB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACbhB,KAAK,iBACJb,OAAA,CAACF,UAAU;MAAC0B,OAAO,EAAC,OAAO;MAACO,KAAK,EAAC,OAAO;MAACN,YAAY;MAAAF,QAAA,EACnDV;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CACb,EACAG,MAAM,CAACC,IAAI,CAACxB,SAAS,CAAC,CAACyB,MAAM,GAAG,CAAC,iBAChClC,OAAA,CAAAE,SAAA;MAAAqB,QAAA,GACGlB,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK8B,SAAS,iBACpDnC,OAAA,CAACF,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAAAD,QAAA,GAAC,iBAAe,EAAClB,aAAa;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CACpE,EACAtB,WAAW,iBACVP,OAAA,CAACF,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAAAD,QAAA,GAAC,wBACD,EAAChB,WAAW;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CACb,eACD7B,OAAA,CAACP,iBAAiB;QAACc,WAAW,EAAEA,WAAY;QAACE,SAAS,EAAEA;MAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACrE,CACH,eACA7B,OAAA,CAACL,eAAe;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC,eACtB7B,OAAA,CAACH,WAAW;MAAA0B,QAAA,gBACVvB,OAAA,CAACF,UAAU;QAAC0B,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAEtC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb7B,OAAA,CAACL,eAAe;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnB;AAACzB,EAAA,CAjEQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAmEZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}