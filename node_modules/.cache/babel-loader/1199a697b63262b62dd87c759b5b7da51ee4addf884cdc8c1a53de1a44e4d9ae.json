{"ast":null,"code":"var _jsxFileName = \"/Users/marleywetini/Downloads/assignment3-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./components/InputForm\";\nimport DataVisualization from \"./components/DataVisualization\";\nimport { AppContainer, StyledPaper } from \"./styles/AppStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [aqiPrediction, setAqiPrediction] = useState(0);\n  const [aqiCategory, setAqiCategory] = useState(0);\n  const [inputData, setInputData] = useState({});\n  const [error, setError] = useState(null); // Initialize as null to avoid confusion\n\n  const handleFormSubmit = async inputData => {\n    // Store input data immediately for visualization\n    setInputData(inputData);\n    setError(null); // Reset error message\n\n    try {\n      // Send request to backend\n      const response = await axios.post(\"http://127.0.0.1:8000/predict?model_choice=Regression\",\n      // Corrected model_choice\n      inputData,\n      // Send inputData directly\n      {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      } // Explicitly set Content-Type to JSON\n      );\n\n      // Set response data in state\n      setAqiPrediction(response.data.aqi_prediction);\n      setAqiCategory(response.data.aqi_category);\n    } catch (error) {\n      console.error(\"Error fetching prediction or classification:\", error);\n      setError(\"Failed to fetch data from backend. Please try again.\");\n      setAqiPrediction(null);\n      setAqiCategory(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"AQI Prediction and Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPaper, {\n      children: /*#__PURE__*/_jsxDEV(InputForm, {\n        onSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      gutterBottom: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), Object.keys(inputData).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [aqiPrediction !== null && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Predicted AQI: \", aqiPrediction.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), aqiCategory && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Air Quality Category: \", aqiCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DataVisualization, {\n        aqiCategory: aqiCategory,\n        inputData: inputData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ND+az0rHiGgVZqnyYKl5OKCbAUM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","InputForm","DataVisualization","AppContainer","StyledPaper","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","aqiPrediction","setAqiPrediction","aqiCategory","setAqiCategory","inputData","setInputData","error","setError","handleFormSubmit","response","post","headers","data","aqi_prediction","aqi_category","console","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","color","Object","keys","length","toFixed","_c","$RefreshReg$"],"sources":["/Users/marleywetini/Downloads/assignment3-main/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./components/InputForm\";\nimport DataVisualization from \"./components/DataVisualization\";\nimport { AppContainer, StyledPaper } from \"./styles/AppStyles\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction App() {\n  const [aqiPrediction, setAqiPrediction] = useState(0);\n  const [aqiCategory, setAqiCategory] = useState(0);\n  const [inputData, setInputData] = useState({});\n  const [error, setError] = useState(null); // Initialize as null to avoid confusion\n\n  const handleFormSubmit = async (inputData) => {\n    // Store input data immediately for visualization\n    setInputData(inputData);\n    setError(null); // Reset error message\n\n    try {\n      // Send request to backend\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/predict?model_choice=Regression\", // Corrected model_choice\n        inputData, // Send inputData directly\n        { headers: { \"Content-Type\": \"application/json\" } } // Explicitly set Content-Type to JSON\n      );\n\n      // Set response data in state\n      setAqiPrediction(response.data.aqi_prediction);\n      setAqiCategory(response.data.aqi_category);\n    } catch (error) {\n      console.error(\"Error fetching prediction or classification:\", error);\n      setError(\"Failed to fetch data from backend. Please try again.\");\n      setAqiPrediction(null);\n      setAqiCategory(null);\n    }\n  };\n\n  return (\n    <AppContainer>\n      <Typography variant=\"h4\" gutterBottom>\n        AQI Prediction and Classification\n      </Typography>\n      <StyledPaper>\n        <InputForm onSubmit={handleFormSubmit} />\n      </StyledPaper>\n\n      {error && (\n        <Typography variant=\"body1\" color=\"error\" gutterBottom>\n          {error}\n        </Typography>\n      )}\n\n      {Object.keys(inputData).length > 0 && (\n        <>\n          {aqiPrediction !== null && (\n            <Typography variant=\"h6\">\n              Predicted AQI: {aqiPrediction.toFixed(2)}\n            </Typography>\n          )}\n          {aqiCategory && (\n            <Typography variant=\"h6\">\n              Air Quality Category: {aqiCategory}\n            </Typography>\n          )}\n          <DataVisualization aqiCategory={aqiCategory} inputData={inputData} />\n        </>\n      )}\n    </AppContainer>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}