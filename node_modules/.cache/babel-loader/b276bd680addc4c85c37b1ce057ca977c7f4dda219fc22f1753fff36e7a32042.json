{"ast":null,"code":"var _jsxFileName = \"/Users/marleywetini/repos/COS30049_Assignment/src/components/DynamicGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicGraph = ({\n  predictions\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [chartData, setChartData] = useState(predictions);\n  useEffect(() => {\n    // Set up the SVG canvas dimensions\n    const width = 600;\n    const height = 400;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n\n    // Clear previous SVG content\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    // Create the SVG canvas\n    const svg = d3.select(svgRef.current).attr(\"width\", width).attr(\"height\", height);\n\n    // Set up x and y scales\n    const xScale = d3.scaleLinear().domain([0, chartData.length - 1]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(chartData, d => d.value)]).nice().range([height - margin.bottom, margin.top]);\n\n    // Add x and y axes\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(xScale).ticks(chartData.length));\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisLeft(yScale));\n\n    // Create a line generator\n    const line = d3.line().x((d, i) => xScale(i)).y(d => yScale(d.value)).curve(d3.curveMonotoneX);\n\n    // Add the line path\n    svg.append(\"path\").datum(chartData).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 2).attr(\"d\", line);\n  }, [chartData]);\n\n  // Update chart data when predictions prop changes\n  useEffect(() => {\n    setChartData(predictions);\n  }, [predictions]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n_s(DynamicGraph, \"gH4NSuqwaN/b9cohwsp3KPX0vZw=\");\n_c = DynamicGraph;\nexport default DynamicGraph;\nvar _c;\n$RefreshReg$(_c, \"DynamicGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","jsxDEV","_jsxDEV","DynamicGraph","predictions","_s","svgRef","chartData","setChartData","width","height","margin","top","right","bottom","left","select","current","selectAll","remove","svg","attr","xScale","scaleLinear","domain","length","range","yScale","max","d","value","nice","append","call","axisBottom","ticks","axisLeft","line","x","i","y","curve","curveMonotoneX","datum","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marleywetini/repos/COS30049_Assignment/src/components/DynamicGraph.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nconst DynamicGraph = ({ predictions }) => {\n  const svgRef = useRef();\n  const [chartData, setChartData] = useState(predictions);\n\n  useEffect(() => {\n    // Set up the SVG canvas dimensions\n    const width = 600;\n    const height = 400;\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n\n    // Clear previous SVG content\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    // Create the SVG canvas\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    // Set up x and y scales\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, chartData.length - 1])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(chartData, (d) => d.value)])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    // Add x and y axes\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(xScale).ticks(chartData.length));\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(d3.axisLeft(yScale));\n\n    // Create a line generator\n    const line = d3\n      .line()\n      .x((d, i) => xScale(i))\n      .y((d) => yScale(d.value))\n      .curve(d3.curveMonotoneX);\n\n    // Add the line path\n    svg\n      .append(\"path\")\n      .datum(chartData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", line);\n  }, [chartData]);\n\n  // Update chart data when predictions prop changes\n  useEffect(() => {\n    setChartData(predictions);\n  }, [predictions]);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default DynamicGraph;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,MAAM,GAAGT,MAAM,CAAC,CAAC;EACvB,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACK,WAAW,CAAC;EAEvDN,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;;IAE3D;IACAf,EAAE,CAACgB,MAAM,CAACV,MAAM,CAACW,OAAO,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAEjD;IACA,MAAMC,GAAG,GAAGpB,EAAE,CACXgB,MAAM,CAACV,MAAM,CAACW,OAAO,CAAC,CACtBI,IAAI,CAAC,OAAO,EAAEZ,KAAK,CAAC,CACpBY,IAAI,CAAC,QAAQ,EAAEX,MAAM,CAAC;;IAEzB;IACA,MAAMY,MAAM,GAAGtB,EAAE,CACduB,WAAW,CAAC,CAAC,CACbC,MAAM,CAAC,CAAC,CAAC,EAAEjB,SAAS,CAACkB,MAAM,GAAG,CAAC,CAAC,CAAC,CACjCC,KAAK,CAAC,CAACf,MAAM,CAACI,IAAI,EAAEN,KAAK,GAAGE,MAAM,CAACE,KAAK,CAAC,CAAC;IAE7C,MAAMc,MAAM,GAAG3B,EAAE,CACduB,WAAW,CAAC,CAAC,CACbC,MAAM,CAAC,CAAC,CAAC,EAAExB,EAAE,CAAC4B,GAAG,CAACrB,SAAS,EAAGsB,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAC9CC,IAAI,CAAC,CAAC,CACNL,KAAK,CAAC,CAAChB,MAAM,GAAGC,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACC,GAAG,CAAC,CAAC;;IAE9C;IACAQ,GAAG,CACAY,MAAM,CAAC,GAAG,CAAC,CACXX,IAAI,CAAC,WAAW,EAAE,eAAeX,MAAM,GAAGC,MAAM,CAACG,MAAM,GAAG,CAAC,CAC3DmB,IAAI,CAACjC,EAAE,CAACkC,UAAU,CAACZ,MAAM,CAAC,CAACa,KAAK,CAAC5B,SAAS,CAACkB,MAAM,CAAC,CAAC;IAEtDL,GAAG,CACAY,MAAM,CAAC,GAAG,CAAC,CACXX,IAAI,CAAC,WAAW,EAAE,aAAaV,MAAM,CAACI,IAAI,KAAK,CAAC,CAChDkB,IAAI,CAACjC,EAAE,CAACoC,QAAQ,CAACT,MAAM,CAAC,CAAC;;IAE5B;IACA,MAAMU,IAAI,GAAGrC,EAAE,CACZqC,IAAI,CAAC,CAAC,CACNC,CAAC,CAAC,CAACT,CAAC,EAAEU,CAAC,KAAKjB,MAAM,CAACiB,CAAC,CAAC,CAAC,CACtBC,CAAC,CAAEX,CAAC,IAAKF,MAAM,CAACE,CAAC,CAACC,KAAK,CAAC,CAAC,CACzBW,KAAK,CAACzC,EAAE,CAAC0C,cAAc,CAAC;;IAE3B;IACAtB,GAAG,CACAY,MAAM,CAAC,MAAM,CAAC,CACdW,KAAK,CAACpC,SAAS,CAAC,CAChBc,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAC3BA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,GAAG,EAAEgB,IAAI,CAAC;EACpB,CAAC,EAAE,CAAC9B,SAAS,CAAC,CAAC;;EAEf;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACJ,WAAW,CAAC;EAC3B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBAAOF,OAAA;IAAK0C,GAAG,EAAEtC;EAAO;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjC,CAAC;AAAC3C,EAAA,CAjEIF,YAAY;AAAA8C,EAAA,GAAZ9C,YAAY;AAmElB,eAAeA,YAAY;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}