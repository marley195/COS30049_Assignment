{"ast":null,"code":"var _jsxFileName = \"/Users/marleywetini/repos/COS30049_Assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./components/InputForm\";\nimport DataVisualization from \"./components/DataVisualization\";\nimport DynamicGraph from \"./components/DynamicGraph\";\nimport PredictionGraph from \"./components/PredictionGraph\";\nimport { AppContainer, StyledPaper } from \"./styles/AppStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [aqiPrediction, setAqiPrediction] = useState(null);\n  const [aqiCategory, setAqiCategory] = useState(null);\n  const [healthAdvice, setHealthAdvice] = useState(null); // Added state for health advice\n  const [inputData, setInputData] = useState({});\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState(null);\n  const handleFormSubmit = async inputData => {\n    setInputData(inputData);\n    setError(null);\n    console.log(\"Sending input data:\", inputData);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/predict\", inputData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setAqiPrediction(response.data.rating);\n      setAqiCategory(response.data.rating_label);\n      setHealthAdvice(response.data.general_health_advice); // Set health advice\n    } catch (error) {\n      console.error(\"Error fetching prediction or classification:\", error);\n      setError(\"Failed to fetch data from backend. Please try again.\");\n      setAqiPrediction(null);\n      setAqiCategory(null);\n      setHealthAdvice(null); // Reset\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      overflowY: \"auto\",\n      // Enable vertical scrolling\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"AQI Prediction and Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(StyledPaper, {\n          children: /*#__PURE__*/_jsxDEV(InputForm, {\n            onSubmit: handleFormSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error\",\n          gutterBottom: true,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), Object.keys(inputData).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [aqiPrediction !== null && aqiPrediction !== undefined && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Predicted AQI: \", aqiPrediction]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), aqiCategory && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Air Quality Category: \", aqiCategory]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DataVisualization, {\n            inputData: inputData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            align: \"center\",\n            children: \"Prediction Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PredictionGraph, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BtCVqNSsfsxP4/zdLMsTXjAsr3A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","InputForm","DataVisualization","DynamicGraph","PredictionGraph","AppContainer","StyledPaper","Typography","Grid","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","aqiPrediction","setAqiPrediction","aqiCategory","setAqiCategory","healthAdvice","setHealthAdvice","inputData","setInputData","predictions","setPredictions","error","setError","handleFormSubmit","console","log","response","post","headers","data","rating","rating_label","general_health_advice","sx","display","flexDirection","alignItems","minHeight","overflowY","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","item","xs","md","onSubmit","color","Object","keys","length","undefined","_c","$RefreshReg$"],"sources":["/Users/marleywetini/repos/COS30049_Assignment/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from \"./components/InputForm\";\nimport DataVisualization from \"./components/DataVisualization\";\nimport DynamicGraph from \"./components/DynamicGraph\";\nimport PredictionGraph from \"./components/PredictionGraph\";\nimport { AppContainer, StyledPaper } from \"./styles/AppStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\n\nfunction App() {\n  const [aqiPrediction, setAqiPrediction] = useState(null);\n  const [aqiCategory, setAqiCategory] = useState(null);\n  const [healthAdvice, setHealthAdvice] = useState(null); // Added state for health advice\n  const [inputData, setInputData] = useState({});\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState(null);\n\n  const handleFormSubmit = async (inputData) => {\n    setInputData(inputData);\n    setError(null);\n    console.log(\"Sending input data:\", inputData);\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/predict\",\n        inputData,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      setAqiPrediction(response.data.rating);\n      setAqiCategory(response.data.rating_label);\n      setHealthAdvice(response.data.general_health_advice); // Set health advice\n    } catch (error) {\n      console.error(\"Error fetching prediction or classification:\", error);\n      setError(\"Failed to fetch data from backend. Please try again.\");\n      setAqiPrediction(null);\n      setAqiCategory(null);\n      setHealthAdvice(null); // Reset\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        minHeight: \"100vh\",\n        overflowY: \"auto\", // Enable vertical scrolling\n        padding: 2,\n      }}\n    >\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        AQI Prediction and Classification\n      </Typography>\n\n      <Grid container spacing={2} justifyContent=\"center\">\n        {/* Input Form Section */}\n        <Grid item xs={12} md={6}>\n          <StyledPaper>\n            <InputForm onSubmit={handleFormSubmit} />\n          </StyledPaper>\n          {error && (\n            <Typography variant=\"body1\" color=\"error\" gutterBottom>\n              {error}\n            </Typography>\n          )}\n          {Object.keys(inputData).length > 0 && (\n            <>\n              {aqiPrediction !== null && aqiPrediction !== undefined && (\n                <Typography variant=\"h6\">\n                  Predicted AQI: {aqiPrediction}\n                </Typography>\n              )}\n              {aqiCategory && (\n                <Typography variant=\"h6\">\n                  Air Quality Category: {aqiCategory}\n                </Typography>\n              )}\n              <DataVisualization inputData={inputData} />\n            </>\n          )}\n        </Grid>\n\n        {/* Prediction Graph Section */}\n        <Grid item xs={12} md={6}>\n          <StyledPaper>\n            <Typography variant=\"h5\" gutterBottom align=\"center\">\n              Prediction Graph\n            </Typography>\n            <PredictionGraph />\n          </StyledPaper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}